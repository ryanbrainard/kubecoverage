apiVersion: v1
kind: Namespace
metadata:
  name: go-test-coverage-demo

---

apiVersion: v1
kind: Service
metadata:
  namespace: go-test-coverage-demo
  name: test-exec
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      nodePort: 30001 # set for demo purposes
  selector:
    app: test-exec

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: go-test-coverage-demo
  name: test-exec
  labels:
    app: test-exec
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-exec
  template:
    metadata:
      labels:
        app: test-exec
    spec:
      containers:
        - image: ryanbrainard/go-test-coverage-demo-test-exec
          name: test-exec
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - name: coverage
              mountPath: /tmp/coverage
      volumes:
        - name: coverage
          hostPath:
            path: /tmp/coverage

---

apiVersion: v1
kind: Service
metadata:
  namespace: go-test-coverage-demo
  name: coverage-viewer
  labels:
    app: coverage-viewer
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      nodePort: 30002 # set for demo purposes
  selector:
    app: coverage-viewer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: go-test-coverage-demo
  name: coverage-viewer
  labels:
    app: coverage-viewer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: coverage-viewer
  template:
    metadata:
      labels:
        app: coverage-viewer
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - test-exec
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: shaas
          image: heroku/shaas
          env:
            - name: PORT
              value: "8080"
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - name: coverage
              mountPath: /tmp/coverage
      volumes:
        - name: coverage
          hostPath:
            path: /tmp/coverage
